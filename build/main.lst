ARM GAS  /tmp/ccOJxakx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB321:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccOJxakx.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_ADC1_Init(void);
  54:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccOJxakx.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_ADC1_Init();
  93:Core/Src/main.c ****   MX_USART2_UART_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Infinite loop */
  99:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 100:Core/Src/main.c ****   while (1)
 101:Core/Src/main.c ****   {
 102:Core/Src/main.c ****     /* USER CODE END WHILE */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief System Clock Configuration
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** void SystemClock_Config(void)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     Error_Handler();
 123:Core/Src/main.c ****   }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccOJxakx.s 			page 4


 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 160:Core/Src/main.c ****   * @param None
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** static void MX_ADC1_Init(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 171:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Common config
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c ****   hadc1.Instance = ADC1;
 180:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 181:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 182:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 183:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 184:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 185:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 186:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 187:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 188:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 189:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 190:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 191:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 192:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 193:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 194:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /** Configure the ADC multi-mode
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 202:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
ARM GAS  /tmp/ccOJxakx.s 			page 5


 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure Regular Channel
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 210:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 211:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 212:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 213:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 214:Core/Src/main.c ****   sConfig.Offset = 0;
 215:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief USART2 Initialization Function
 227:Core/Src/main.c ****   * @param None
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 231:Core/Src/main.c **** {
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 240:Core/Src/main.c ****   huart2.Instance = USART2;
 241:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 242:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 243:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 244:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 245:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 246:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 247:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 248:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 249:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 250:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** }
 259:Core/Src/main.c **** 
ARM GAS  /tmp/ccOJxakx.s 			page 6


 260:Core/Src/main.c **** /**
 261:Core/Src/main.c ****   * @brief GPIO Initialization Function
 262:Core/Src/main.c ****   * @param None
 263:Core/Src/main.c ****   * @retval None
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c **** static void MX_GPIO_Init(void)
 266:Core/Src/main.c **** {
  28              		.loc 1 266 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 8AB0     		sub	sp, sp, #40
  37              		.cfi_def_cfa_offset 48
 267:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 267 3 view .LVU1
  39              		.loc 1 267 20 is_stmt 0 view .LVU2
  40 0004 0024     		movs	r4, #0
  41 0006 0594     		str	r4, [sp, #20]
  42 0008 0694     		str	r4, [sp, #24]
  43 000a 0794     		str	r4, [sp, #28]
  44 000c 0894     		str	r4, [sp, #32]
  45 000e 0994     		str	r4, [sp, #36]
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 270:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 270 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 270 3 view .LVU4
  49              		.loc 1 270 3 view .LVU5
  50 0010 214B     		ldr	r3, .L3
  51 0012 DA6C     		ldr	r2, [r3, #76]
  52 0014 42F00402 		orr	r2, r2, #4
  53 0018 DA64     		str	r2, [r3, #76]
  54              		.loc 1 270 3 view .LVU6
  55 001a DA6C     		ldr	r2, [r3, #76]
  56 001c 02F00402 		and	r2, r2, #4
  57 0020 0192     		str	r2, [sp, #4]
  58              		.loc 1 270 3 view .LVU7
  59 0022 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
 271:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  61              		.loc 1 271 3 view .LVU8
  62              	.LBB5:
  63              		.loc 1 271 3 view .LVU9
  64              		.loc 1 271 3 view .LVU10
  65 0024 DA6C     		ldr	r2, [r3, #76]
  66 0026 42F08002 		orr	r2, r2, #128
  67 002a DA64     		str	r2, [r3, #76]
  68              		.loc 1 271 3 view .LVU11
  69 002c DA6C     		ldr	r2, [r3, #76]
  70 002e 02F08002 		and	r2, r2, #128
  71 0032 0292     		str	r2, [sp, #8]
  72              		.loc 1 271 3 view .LVU12
ARM GAS  /tmp/ccOJxakx.s 			page 7


  73 0034 029A     		ldr	r2, [sp, #8]
  74              	.LBE5:
 272:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  75              		.loc 1 272 3 view .LVU13
  76              	.LBB6:
  77              		.loc 1 272 3 view .LVU14
  78              		.loc 1 272 3 view .LVU15
  79 0036 DA6C     		ldr	r2, [r3, #76]
  80 0038 42F00102 		orr	r2, r2, #1
  81 003c DA64     		str	r2, [r3, #76]
  82              		.loc 1 272 3 view .LVU16
  83 003e DA6C     		ldr	r2, [r3, #76]
  84 0040 02F00102 		and	r2, r2, #1
  85 0044 0392     		str	r2, [sp, #12]
  86              		.loc 1 272 3 view .LVU17
  87 0046 039A     		ldr	r2, [sp, #12]
  88              	.LBE6:
 273:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  89              		.loc 1 273 3 view .LVU18
  90              	.LBB7:
  91              		.loc 1 273 3 view .LVU19
  92              		.loc 1 273 3 view .LVU20
  93 0048 DA6C     		ldr	r2, [r3, #76]
  94 004a 42F00202 		orr	r2, r2, #2
  95 004e DA64     		str	r2, [r3, #76]
  96              		.loc 1 273 3 view .LVU21
  97 0050 DB6C     		ldr	r3, [r3, #76]
  98 0052 03F00203 		and	r3, r3, #2
  99 0056 0493     		str	r3, [sp, #16]
 100              		.loc 1 273 3 view .LVU22
 101 0058 049B     		ldr	r3, [sp, #16]
 102              	.LBE7:
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 276:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 103              		.loc 1 276 3 view .LVU23
 104 005a 2246     		mov	r2, r4
 105 005c 2021     		movs	r1, #32
 106 005e 4FF09040 		mov	r0, #1207959552
 107 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL0:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 279:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 109              		.loc 1 279 3 view .LVU24
 110              		.loc 1 279 23 is_stmt 0 view .LVU25
 111 0066 4FF40053 		mov	r3, #8192
 112 006a 0593     		str	r3, [sp, #20]
 280:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 113              		.loc 1 280 3 is_stmt 1 view .LVU26
 114              		.loc 1 280 24 is_stmt 0 view .LVU27
 115 006c 4FF40413 		mov	r3, #2162688
 116 0070 0693     		str	r3, [sp, #24]
 281:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 281 3 is_stmt 1 view .LVU28
 118              		.loc 1 281 24 is_stmt 0 view .LVU29
 119 0072 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/ccOJxakx.s 			page 8


 282:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 120              		.loc 1 282 3 is_stmt 1 view .LVU30
 121 0074 05A9     		add	r1, sp, #20
 122 0076 0948     		ldr	r0, .L3+4
 123 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL1:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 285:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 125              		.loc 1 285 3 view .LVU31
 126              		.loc 1 285 23 is_stmt 0 view .LVU32
 127 007c 2023     		movs	r3, #32
 128 007e 0593     		str	r3, [sp, #20]
 286:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 129              		.loc 1 286 3 is_stmt 1 view .LVU33
 130              		.loc 1 286 24 is_stmt 0 view .LVU34
 131 0080 0123     		movs	r3, #1
 132 0082 0693     		str	r3, [sp, #24]
 287:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 287 3 is_stmt 1 view .LVU35
 134              		.loc 1 287 24 is_stmt 0 view .LVU36
 135 0084 0794     		str	r4, [sp, #28]
 288:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136              		.loc 1 288 3 is_stmt 1 view .LVU37
 137              		.loc 1 288 25 is_stmt 0 view .LVU38
 138 0086 0894     		str	r4, [sp, #32]
 289:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 139              		.loc 1 289 3 is_stmt 1 view .LVU39
 140 0088 05A9     		add	r1, sp, #20
 141 008a 4FF09040 		mov	r0, #1207959552
 142 008e FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL2:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }
 144              		.loc 1 291 1 is_stmt 0 view .LVU40
 145 0092 0AB0     		add	sp, sp, #40
 146              		.cfi_def_cfa_offset 8
 147              		@ sp needed
 148 0094 10BD     		pop	{r4, pc}
 149              	.L4:
 150 0096 00BF     		.align	2
 151              	.L3:
 152 0098 00100240 		.word	1073876992
 153 009c 00080048 		.word	1207961600
 154              		.cfi_endproc
 155              	.LFE321:
 157              		.section	.text.Error_Handler,"ax",%progbits
 158              		.align	1
 159              		.global	Error_Handler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	Error_Handler:
 166              	.LFB322:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccOJxakx.s 			page 9


 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /* USER CODE END 4 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 299:Core/Src/main.c ****   * @retval None
 300:Core/Src/main.c ****   */
 301:Core/Src/main.c **** void Error_Handler(void)
 302:Core/Src/main.c **** {
 167              		.loc 1 302 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ Volatile: function does not return.
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 303:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 304:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 305:Core/Src/main.c ****   __disable_irq();
 173              		.loc 1 305 3 view .LVU42
 174              	.LBB8:
 175              	.LBI8:
 176              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /tmp/ccOJxakx.s 			page 10


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /tmp/ccOJxakx.s 			page 11


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
ARM GAS  /tmp/ccOJxakx.s 			page 12


 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccOJxakx.s 			page 13


 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 177              		.loc 2 207 27 view .LVU43
 178              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 179              		.loc 2 209 3 view .LVU44
 180              		.syntax unified
 181              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 182 0000 72B6     		cpsid i
 183              	@ 0 "" 2
 184              		.thumb
 185              		.syntax unified
 186              	.L6:
 187              	.LBE9:
 188              	.LBE8:
 306:Core/Src/main.c ****   while (1)
 189              		.loc 1 306 3 discriminator 1 view .LVU45
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****   }
 190              		.loc 1 308 3 discriminator 1 view .LVU46
 191 0002 FEE7     		b	.L6
 192              		.cfi_endproc
 193              	.LFE322:
 195              		.section	.text.MX_ADC1_Init,"ax",%progbits
 196              		.align	1
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	MX_ADC1_Init:
 203              	.LFB319:
 164:Core/Src/main.c **** 
 204              		.loc 1 164 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 40
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 00B5     		push	{lr}
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 14, -4
 211 0002 8BB0     		sub	sp, sp, #44
 212              		.cfi_def_cfa_offset 48
 170:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 213              		.loc 1 170 3 view .LVU48
 170:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 214              		.loc 1 170 24 is_stmt 0 view .LVU49
 215 0004 0023     		movs	r3, #0
 216 0006 0793     		str	r3, [sp, #28]
 217 0008 0893     		str	r3, [sp, #32]
 218 000a 0993     		str	r3, [sp, #36]
 171:Core/Src/main.c **** 
 219              		.loc 1 171 3 is_stmt 1 view .LVU50
 171:Core/Src/main.c **** 
 220              		.loc 1 171 26 is_stmt 0 view .LVU51
 221 000c 0193     		str	r3, [sp, #4]
 222 000e 0293     		str	r3, [sp, #8]
 223 0010 0393     		str	r3, [sp, #12]
 224 0012 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccOJxakx.s 			page 14


 225 0014 0593     		str	r3, [sp, #20]
 226 0016 0693     		str	r3, [sp, #24]
 179:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 227              		.loc 1 179 3 is_stmt 1 view .LVU52
 179:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 228              		.loc 1 179 18 is_stmt 0 view .LVU53
 229 0018 1C48     		ldr	r0, .L15
 230 001a 1D4A     		ldr	r2, .L15+4
 231 001c 0260     		str	r2, [r0]
 180:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 232              		.loc 1 180 3 is_stmt 1 view .LVU54
 180:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 233              		.loc 1 180 29 is_stmt 0 view .LVU55
 234 001e 4360     		str	r3, [r0, #4]
 181:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 235              		.loc 1 181 3 is_stmt 1 view .LVU56
 181:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 236              		.loc 1 181 25 is_stmt 0 view .LVU57
 237 0020 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 238              		.loc 1 182 3 is_stmt 1 view .LVU58
 182:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 239              		.loc 1 182 24 is_stmt 0 view .LVU59
 240 0022 C360     		str	r3, [r0, #12]
 183:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 241              		.loc 1 183 3 is_stmt 1 view .LVU60
 183:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 242              		.loc 1 183 27 is_stmt 0 view .LVU61
 243 0024 0361     		str	r3, [r0, #16]
 184:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 244              		.loc 1 184 3 is_stmt 1 view .LVU62
 184:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 245              		.loc 1 184 27 is_stmt 0 view .LVU63
 246 0026 0422     		movs	r2, #4
 247 0028 4261     		str	r2, [r0, #20]
 185:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 248              		.loc 1 185 3 is_stmt 1 view .LVU64
 185:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 185 31 is_stmt 0 view .LVU65
 250 002a 0376     		strb	r3, [r0, #24]
 186:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 251              		.loc 1 186 3 is_stmt 1 view .LVU66
 186:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 252              		.loc 1 186 33 is_stmt 0 view .LVU67
 253 002c 4376     		strb	r3, [r0, #25]
 187:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 254              		.loc 1 187 3 is_stmt 1 view .LVU68
 187:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 255              		.loc 1 187 30 is_stmt 0 view .LVU69
 256 002e 0122     		movs	r2, #1
 257 0030 C261     		str	r2, [r0, #28]
 188:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 258              		.loc 1 188 3 is_stmt 1 view .LVU70
 188:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 259              		.loc 1 188 36 is_stmt 0 view .LVU71
 260 0032 80F82030 		strb	r3, [r0, #32]
 189:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
ARM GAS  /tmp/ccOJxakx.s 			page 15


 261              		.loc 1 189 3 is_stmt 1 view .LVU72
 189:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 262              		.loc 1 189 31 is_stmt 0 view .LVU73
 263 0036 8362     		str	r3, [r0, #40]
 190:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 264              		.loc 1 190 3 is_stmt 1 view .LVU74
 190:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 265              		.loc 1 190 35 is_stmt 0 view .LVU75
 266 0038 C362     		str	r3, [r0, #44]
 191:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 267              		.loc 1 191 3 is_stmt 1 view .LVU76
 191:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 268              		.loc 1 191 36 is_stmt 0 view .LVU77
 269 003a 80F83030 		strb	r3, [r0, #48]
 192:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 270              		.loc 1 192 3 is_stmt 1 view .LVU78
 192:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 271              		.loc 1 192 22 is_stmt 0 view .LVU79
 272 003e 4363     		str	r3, [r0, #52]
 193:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 273              		.loc 1 193 3 is_stmt 1 view .LVU80
 193:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 274              		.loc 1 193 31 is_stmt 0 view .LVU81
 275 0040 80F83830 		strb	r3, [r0, #56]
 194:Core/Src/main.c ****   {
 276              		.loc 1 194 3 is_stmt 1 view .LVU82
 194:Core/Src/main.c ****   {
 277              		.loc 1 194 7 is_stmt 0 view .LVU83
 278 0044 FFF7FEFF 		bl	HAL_ADC_Init
 279              	.LVL3:
 194:Core/Src/main.c ****   {
 280              		.loc 1 194 6 view .LVU84
 281 0048 D0B9     		cbnz	r0, .L12
 201:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 282              		.loc 1 201 3 is_stmt 1 view .LVU85
 201:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 283              		.loc 1 201 18 is_stmt 0 view .LVU86
 284 004a 0023     		movs	r3, #0
 285 004c 0793     		str	r3, [sp, #28]
 202:Core/Src/main.c ****   {
 286              		.loc 1 202 3 is_stmt 1 view .LVU87
 202:Core/Src/main.c ****   {
 287              		.loc 1 202 7 is_stmt 0 view .LVU88
 288 004e 07A9     		add	r1, sp, #28
 289 0050 0E48     		ldr	r0, .L15
 290 0052 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 291              	.LVL4:
 202:Core/Src/main.c ****   {
 292              		.loc 1 202 6 view .LVU89
 293 0056 A8B9     		cbnz	r0, .L13
 209:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 294              		.loc 1 209 3 is_stmt 1 view .LVU90
 209:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 295              		.loc 1 209 19 is_stmt 0 view .LVU91
 296 0058 0E4B     		ldr	r3, .L15+8
 297 005a 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
ARM GAS  /tmp/ccOJxakx.s 			page 16


 298              		.loc 1 210 3 is_stmt 1 view .LVU92
 210:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 299              		.loc 1 210 16 is_stmt 0 view .LVU93
 300 005c 0623     		movs	r3, #6
 301 005e 0293     		str	r3, [sp, #8]
 211:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 302              		.loc 1 211 3 is_stmt 1 view .LVU94
 211:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 303              		.loc 1 211 24 is_stmt 0 view .LVU95
 304 0060 0023     		movs	r3, #0
 305 0062 0393     		str	r3, [sp, #12]
 212:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 306              		.loc 1 212 3 is_stmt 1 view .LVU96
 212:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 307              		.loc 1 212 22 is_stmt 0 view .LVU97
 308 0064 7F22     		movs	r2, #127
 309 0066 0492     		str	r2, [sp, #16]
 213:Core/Src/main.c ****   sConfig.Offset = 0;
 310              		.loc 1 213 3 is_stmt 1 view .LVU98
 213:Core/Src/main.c ****   sConfig.Offset = 0;
 311              		.loc 1 213 24 is_stmt 0 view .LVU99
 312 0068 0422     		movs	r2, #4
 313 006a 0592     		str	r2, [sp, #20]
 214:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 314              		.loc 1 214 3 is_stmt 1 view .LVU100
 214:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 315              		.loc 1 214 18 is_stmt 0 view .LVU101
 316 006c 0693     		str	r3, [sp, #24]
 215:Core/Src/main.c ****   {
 317              		.loc 1 215 3 is_stmt 1 view .LVU102
 215:Core/Src/main.c ****   {
 318              		.loc 1 215 7 is_stmt 0 view .LVU103
 319 006e 0DEB0201 		add	r1, sp, r2
 320 0072 0648     		ldr	r0, .L15
 321 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 322              	.LVL5:
 215:Core/Src/main.c ****   {
 323              		.loc 1 215 6 view .LVU104
 324 0078 30B9     		cbnz	r0, .L14
 223:Core/Src/main.c **** 
 325              		.loc 1 223 1 view .LVU105
 326 007a 0BB0     		add	sp, sp, #44
 327              		.cfi_remember_state
 328              		.cfi_def_cfa_offset 4
 329              		@ sp needed
 330 007c 5DF804FB 		ldr	pc, [sp], #4
 331              	.L12:
 332              		.cfi_restore_state
 196:Core/Src/main.c ****   }
 333              		.loc 1 196 5 is_stmt 1 view .LVU106
 334 0080 FFF7FEFF 		bl	Error_Handler
 335              	.LVL6:
 336              	.L13:
 204:Core/Src/main.c ****   }
 337              		.loc 1 204 5 view .LVU107
 338 0084 FFF7FEFF 		bl	Error_Handler
 339              	.LVL7:
ARM GAS  /tmp/ccOJxakx.s 			page 17


 340              	.L14:
 217:Core/Src/main.c ****   }
 341              		.loc 1 217 5 view .LVU108
 342 0088 FFF7FEFF 		bl	Error_Handler
 343              	.LVL8:
 344              	.L16:
 345              		.align	2
 346              	.L15:
 347 008c 00000000 		.word	hadc1
 348 0090 00000450 		.word	1342439424
 349 0094 2000F014 		.word	351272992
 350              		.cfi_endproc
 351              	.LFE319:
 353              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 354              		.align	1
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv4-sp-d16
 360              	MX_USART2_UART_Init:
 361              	.LFB320:
 231:Core/Src/main.c **** 
 362              		.loc 1 231 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 08B5     		push	{r3, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 240:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 370              		.loc 1 240 3 view .LVU110
 240:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 371              		.loc 1 240 19 is_stmt 0 view .LVU111
 372 0002 0B48     		ldr	r0, .L21
 373 0004 0B4B     		ldr	r3, .L21+4
 374 0006 0360     		str	r3, [r0]
 241:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 375              		.loc 1 241 3 is_stmt 1 view .LVU112
 241:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 376              		.loc 1 241 24 is_stmt 0 view .LVU113
 377 0008 4FF4E133 		mov	r3, #115200
 378 000c 4360     		str	r3, [r0, #4]
 242:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 379              		.loc 1 242 3 is_stmt 1 view .LVU114
 242:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 380              		.loc 1 242 26 is_stmt 0 view .LVU115
 381 000e 0023     		movs	r3, #0
 382 0010 8360     		str	r3, [r0, #8]
 243:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 383              		.loc 1 243 3 is_stmt 1 view .LVU116
 243:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 384              		.loc 1 243 24 is_stmt 0 view .LVU117
 385 0012 C360     		str	r3, [r0, #12]
 244:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 386              		.loc 1 244 3 is_stmt 1 view .LVU118
 244:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccOJxakx.s 			page 18


 387              		.loc 1 244 22 is_stmt 0 view .LVU119
 388 0014 0361     		str	r3, [r0, #16]
 245:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 389              		.loc 1 245 3 is_stmt 1 view .LVU120
 245:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 390              		.loc 1 245 20 is_stmt 0 view .LVU121
 391 0016 0C22     		movs	r2, #12
 392 0018 4261     		str	r2, [r0, #20]
 246:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 393              		.loc 1 246 3 is_stmt 1 view .LVU122
 246:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 394              		.loc 1 246 25 is_stmt 0 view .LVU123
 395 001a 8361     		str	r3, [r0, #24]
 247:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 396              		.loc 1 247 3 is_stmt 1 view .LVU124
 247:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 397              		.loc 1 247 28 is_stmt 0 view .LVU125
 398 001c C361     		str	r3, [r0, #28]
 248:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 399              		.loc 1 248 3 is_stmt 1 view .LVU126
 248:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 400              		.loc 1 248 30 is_stmt 0 view .LVU127
 401 001e 0362     		str	r3, [r0, #32]
 249:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 402              		.loc 1 249 3 is_stmt 1 view .LVU128
 249:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 403              		.loc 1 249 38 is_stmt 0 view .LVU129
 404 0020 4362     		str	r3, [r0, #36]
 250:Core/Src/main.c ****   {
 405              		.loc 1 250 3 is_stmt 1 view .LVU130
 250:Core/Src/main.c ****   {
 406              		.loc 1 250 7 is_stmt 0 view .LVU131
 407 0022 FFF7FEFF 		bl	HAL_UART_Init
 408              	.LVL9:
 250:Core/Src/main.c ****   {
 409              		.loc 1 250 6 view .LVU132
 410 0026 00B9     		cbnz	r0, .L20
 258:Core/Src/main.c **** 
 411              		.loc 1 258 1 view .LVU133
 412 0028 08BD     		pop	{r3, pc}
 413              	.L20:
 252:Core/Src/main.c ****   }
 414              		.loc 1 252 5 is_stmt 1 view .LVU134
 415 002a FFF7FEFF 		bl	Error_Handler
 416              	.LVL10:
 417              	.L22:
 418 002e 00BF     		.align	2
 419              	.L21:
 420 0030 00000000 		.word	huart2
 421 0034 00440040 		.word	1073759232
 422              		.cfi_endproc
 423              	.LFE320:
 425              		.section	.text.SystemClock_Config,"ax",%progbits
 426              		.align	1
 427              		.global	SystemClock_Config
 428              		.syntax unified
 429              		.thumb
ARM GAS  /tmp/ccOJxakx.s 			page 19


 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	SystemClock_Config:
 434              	.LFB318:
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 435              		.loc 1 114 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 88
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 14, -4
 442 0002 97B0     		sub	sp, sp, #92
 443              		.cfi_def_cfa_offset 96
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 444              		.loc 1 115 3 view .LVU136
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 445              		.loc 1 115 22 is_stmt 0 view .LVU137
 446 0004 4422     		movs	r2, #68
 447 0006 0021     		movs	r1, #0
 448 0008 05A8     		add	r0, sp, #20
 449 000a FFF7FEFF 		bl	memset
 450              	.LVL11:
 116:Core/Src/main.c **** 
 451              		.loc 1 116 3 is_stmt 1 view .LVU138
 116:Core/Src/main.c **** 
 452              		.loc 1 116 22 is_stmt 0 view .LVU139
 453 000e 0023     		movs	r3, #0
 454 0010 0093     		str	r3, [sp]
 455 0012 0193     		str	r3, [sp, #4]
 456 0014 0293     		str	r3, [sp, #8]
 457 0016 0393     		str	r3, [sp, #12]
 458 0018 0493     		str	r3, [sp, #16]
 120:Core/Src/main.c ****   {
 459              		.loc 1 120 3 is_stmt 1 view .LVU140
 120:Core/Src/main.c ****   {
 460              		.loc 1 120 7 is_stmt 0 view .LVU141
 461 001a 4FF40070 		mov	r0, #512
 462 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 463              	.LVL12:
 120:Core/Src/main.c ****   {
 464              		.loc 1 120 6 view .LVU142
 465 0022 20BB     		cbnz	r0, .L28
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 466              		.loc 1 128 3 is_stmt 1 view .LVU143
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 467              		.loc 1 128 36 is_stmt 0 view .LVU144
 468 0024 0223     		movs	r3, #2
 469 0026 0593     		str	r3, [sp, #20]
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 470              		.loc 1 129 3 is_stmt 1 view .LVU145
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 471              		.loc 1 129 30 is_stmt 0 view .LVU146
 472 0028 4FF48072 		mov	r2, #256
 473 002c 0892     		str	r2, [sp, #32]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 474              		.loc 1 130 3 is_stmt 1 view .LVU147
ARM GAS  /tmp/ccOJxakx.s 			page 20


 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 475              		.loc 1 130 41 is_stmt 0 view .LVU148
 476 002e 1022     		movs	r2, #16
 477 0030 0992     		str	r2, [sp, #36]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 478              		.loc 1 131 3 is_stmt 1 view .LVU149
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 479              		.loc 1 131 34 is_stmt 0 view .LVU150
 480 0032 0F93     		str	r3, [sp, #60]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 481              		.loc 1 132 3 is_stmt 1 view .LVU151
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 482              		.loc 1 132 35 is_stmt 0 view .LVU152
 483 0034 1093     		str	r3, [sp, #64]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 484              		.loc 1 133 3 is_stmt 1 view .LVU153
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 485              		.loc 1 133 30 is_stmt 0 view .LVU154
 486 0036 0122     		movs	r2, #1
 487 0038 1192     		str	r2, [sp, #68]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 488              		.loc 1 134 3 is_stmt 1 view .LVU155
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 489              		.loc 1 134 30 is_stmt 0 view .LVU156
 490 003a 0A22     		movs	r2, #10
 491 003c 1292     		str	r2, [sp, #72]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 492              		.loc 1 135 3 is_stmt 1 view .LVU157
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 493              		.loc 1 135 30 is_stmt 0 view .LVU158
 494 003e 0722     		movs	r2, #7
 495 0040 1392     		str	r2, [sp, #76]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 496              		.loc 1 136 3 is_stmt 1 view .LVU159
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 497              		.loc 1 136 30 is_stmt 0 view .LVU160
 498 0042 1493     		str	r3, [sp, #80]
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 499              		.loc 1 137 3 is_stmt 1 view .LVU161
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 500              		.loc 1 137 30 is_stmt 0 view .LVU162
 501 0044 1593     		str	r3, [sp, #84]
 138:Core/Src/main.c ****   {
 502              		.loc 1 138 3 is_stmt 1 view .LVU163
 138:Core/Src/main.c ****   {
 503              		.loc 1 138 7 is_stmt 0 view .LVU164
 504 0046 05A8     		add	r0, sp, #20
 505 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 506              	.LVL13:
 138:Core/Src/main.c ****   {
 507              		.loc 1 138 6 view .LVU165
 508 004c 88B9     		cbnz	r0, .L29
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 509              		.loc 1 145 3 is_stmt 1 view .LVU166
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 510              		.loc 1 145 31 is_stmt 0 view .LVU167
 511 004e 0F23     		movs	r3, #15
ARM GAS  /tmp/ccOJxakx.s 			page 21


 512 0050 0093     		str	r3, [sp]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 513              		.loc 1 147 3 is_stmt 1 view .LVU168
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 514              		.loc 1 147 34 is_stmt 0 view .LVU169
 515 0052 0323     		movs	r3, #3
 516 0054 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 517              		.loc 1 148 3 is_stmt 1 view .LVU170
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 518              		.loc 1 148 35 is_stmt 0 view .LVU171
 519 0056 0023     		movs	r3, #0
 520 0058 0293     		str	r3, [sp, #8]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 521              		.loc 1 149 3 is_stmt 1 view .LVU172
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 522              		.loc 1 149 36 is_stmt 0 view .LVU173
 523 005a 0393     		str	r3, [sp, #12]
 150:Core/Src/main.c **** 
 524              		.loc 1 150 3 is_stmt 1 view .LVU174
 150:Core/Src/main.c **** 
 525              		.loc 1 150 36 is_stmt 0 view .LVU175
 526 005c 0493     		str	r3, [sp, #16]
 152:Core/Src/main.c ****   {
 527              		.loc 1 152 3 is_stmt 1 view .LVU176
 152:Core/Src/main.c ****   {
 528              		.loc 1 152 7 is_stmt 0 view .LVU177
 529 005e 0421     		movs	r1, #4
 530 0060 6846     		mov	r0, sp
 531 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 532              	.LVL14:
 152:Core/Src/main.c ****   {
 533              		.loc 1 152 6 view .LVU178
 534 0066 30B9     		cbnz	r0, .L30
 156:Core/Src/main.c **** 
 535              		.loc 1 156 1 view .LVU179
 536 0068 17B0     		add	sp, sp, #92
 537              		.cfi_remember_state
 538              		.cfi_def_cfa_offset 4
 539              		@ sp needed
 540 006a 5DF804FB 		ldr	pc, [sp], #4
 541              	.L28:
 542              		.cfi_restore_state
 122:Core/Src/main.c ****   }
 543              		.loc 1 122 5 is_stmt 1 view .LVU180
 544 006e FFF7FEFF 		bl	Error_Handler
 545              	.LVL15:
 546              	.L29:
 140:Core/Src/main.c ****   }
 547              		.loc 1 140 5 view .LVU181
 548 0072 FFF7FEFF 		bl	Error_Handler
 549              	.LVL16:
 550              	.L30:
 154:Core/Src/main.c ****   }
 551              		.loc 1 154 5 view .LVU182
 552 0076 FFF7FEFF 		bl	Error_Handler
 553              	.LVL17:
ARM GAS  /tmp/ccOJxakx.s 			page 22


 554              		.cfi_endproc
 555              	.LFE318:
 557              		.section	.text.main,"ax",%progbits
 558              		.align	1
 559              		.global	main
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv4-sp-d16
 565              	main:
 566              	.LFB317:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 567              		.loc 1 69 1 view -0
 568              		.cfi_startproc
 569              		@ Volatile: function does not return.
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572 0000 08B5     		push	{r3, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 3, -8
 575              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 576              		.loc 1 77 3 view .LVU184
 577 0002 FFF7FEFF 		bl	HAL_Init
 578              	.LVL18:
  84:Core/Src/main.c **** 
 579              		.loc 1 84 3 view .LVU185
 580 0006 FFF7FEFF 		bl	SystemClock_Config
 581              	.LVL19:
  91:Core/Src/main.c ****   MX_ADC1_Init();
 582              		.loc 1 91 3 view .LVU186
 583 000a FFF7FEFF 		bl	MX_GPIO_Init
 584              	.LVL20:
  92:Core/Src/main.c ****   MX_USART2_UART_Init();
 585              		.loc 1 92 3 view .LVU187
 586 000e FFF7FEFF 		bl	MX_ADC1_Init
 587              	.LVL21:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 588              		.loc 1 93 3 view .LVU188
 589 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 590              	.LVL22:
 591              	.L32:
 100:Core/Src/main.c ****   {
 592              		.loc 1 100 3 discriminator 1 view .LVU189
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 593              		.loc 1 105 3 discriminator 1 view .LVU190
 594 0016 FEE7     		b	.L32
 595              		.cfi_endproc
 596              	.LFE317:
 598              		.comm	huart2,132,4
 599              		.comm	hadc1,100,4
 600              		.text
 601              	.Letext0:
 602              		.file 3 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 603              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 604              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 605              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
ARM GAS  /tmp/ccOJxakx.s 			page 23


 606              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 607              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 608              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 609              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 610              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 611              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 612              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 613              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 614              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 615              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 616              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 617              		.file 18 "<built-in>"
ARM GAS  /tmp/ccOJxakx.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOJxakx.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccOJxakx.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccOJxakx.s:152    .text.MX_GPIO_Init:0000000000000098 $d
     /tmp/ccOJxakx.s:158    .text.Error_Handler:0000000000000000 $t
     /tmp/ccOJxakx.s:165    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccOJxakx.s:196    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccOJxakx.s:202    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccOJxakx.s:347    .text.MX_ADC1_Init:000000000000008c $d
                            *COM*:0000000000000064 hadc1
     /tmp/ccOJxakx.s:354    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccOJxakx.s:360    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccOJxakx.s:420    .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000084 huart2
     /tmp/ccOJxakx.s:426    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccOJxakx.s:433    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccOJxakx.s:558    .text.main:0000000000000000 $t
     /tmp/ccOJxakx.s:565    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
